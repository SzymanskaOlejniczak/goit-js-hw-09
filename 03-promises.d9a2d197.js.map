{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAASC,GAChC,OAAO,IAAIC,SAAS,SAACC,EAAQC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WAECH,GACJF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGpDG,EAAM,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IA1CCS,SAASC,cAAc,SAE7BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAQJ,IANA,IAAMC,EAAa,GAIIC,EAAjBH,EAAII,cADRC,SAAYC,EAAIH,EAAJG,KAAMlB,EAAKe,EAALf,MAAOmB,EAAMJ,EAANI,OAGlBC,EAAI,EAAGA,EAAGD,EAAOE,MAAOD,GAAK,EAAE,CACpC,IAAME,EAAmB,EAAZtB,EAAMqB,MACbE,EAAiB,EAAXL,EAAKG,MACXG,EAAOF,EAASC,EAAMH,EAC5BN,EAAaW,KAAK,CAAC1B,SAASqB,EAAE,EAAGpB,MAAMwB,G,KAKtCE,GAAyB,EAAzBC,GAAyB,EAAzBC,OAAyBC,E,IAA9B,QAAKC,EAAAC,EAA6BjB,EAAYkB,OAAAC,cAAzCP,GAAAI,EAAAC,EAAyBG,QAAAC,MAAzBT,GAAyB,GAAzB,IAAAU,EAAAN,EAAyBT,MAAjBtB,EAAQqC,EAARrC,SAAUsC,EAAKD,EAALpC,MACnBF,EAAcC,EAASsC,GACtBC,MAAK,SAAApC,G,OAAWqC,EAAA3C,GAAS4C,OAAOC,QAAQvC,E,IACxCwC,OAAM,SAAAvC,G,OAAQoC,EAAA3C,GAAS4C,OAAOG,QAAQxC,E,cAHtCwB,GAAyB,EAAzBC,EAAyBgB,C,aAAzBlB,GAAyB,MAAzBK,EAAyBc,QAAzBd,EAAyBc,Q,YAAzBlB,E,MAAAC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form=document.querySelector('.form');\n\nform.addEventListener('submit',onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const amountMasses=[];\n\n  const {\n    elements: { step, delay, amount  }\n    } = evt.currentTarget;\n\n  for (let i = 0; i <amount.value; i += 1){\n      const delayI=delay.value*1;\n      const stepI=step.value*1\n      const delayT=delayI + stepI*i;\n      amountMasses.push({position:i+1, delay:delayT })\n  }\n\n  // console.log(amountMasses);\n\n  for (const { position, delay } of amountMasses){\n      createPromise(position,delay)\n      .then(resolve => Notiflix.Notify.success(resolve))\n      .catch(reject=>Notiflix.Notify.failure(reject));\n  }\n\n}\n\nfunction createPromise(position,delay){\nreturn new Promise ((resolve,reject)=>{\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(()=>{\n\n          if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          } \n          \n          reject (`❌ Rejected promise ${position} in ${delay}ms`);\n          \n        },delay);\n\n});\n\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","evt","preventDefault","amountMasses","_elements","currentTarget","elements","step","amount","i","value","delayI","stepI","delayT","push","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_value","delay1","then","$parcel$interopDefault","Notify","success","catch","failure","err","return"],"version":3,"file":"03-promises.d9a2d197.js.map"}