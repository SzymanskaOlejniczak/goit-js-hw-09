{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAASC,GAChC,OAAO,IAAIC,SAAS,CAACC,EAAQC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KAECH,GACJF,EAAQ,uBAAqBH,QAAiBC,OAG5CG,EAAM,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA1CLQ,SAASC,cAAc,SAE7BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAAa,IAGjBC,UAAUC,KAAEA,EAAIf,MAAEA,EAAKgB,OAAEA,IACrBL,EAAIM,cAEV,IAAK,IAAIC,EAAI,EAAGA,EAAGF,EAAOG,MAAOD,GAAK,EAAE,CACpC,MAAME,EAAmB,EAAZpB,EAAMmB,MACbE,EAAiB,EAAXN,EAAKI,MACXG,EAAOF,EAASC,EAAMH,EAC5BL,EAAaU,KAAK,CAACxB,SAASmB,EAAE,EAAGlB,MAAMsB,G,CAK3C,IAAK,MAAMvB,SAAEA,EAAUC,MAAAwB,KAAWX,EAC9Bf,EAAcC,EAASyB,GACtBC,MAAKvB,GAAWwB,EAAA9B,GAAS+B,OAAOC,QAAQ1B,KACxC2B,OAAM1B,GAAQuB,EAAA9B,GAAS+B,OAAOG,QAAQ3B,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form=document.querySelector('.form');\n\nform.addEventListener('submit',onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const amountMasses=[];\n\n  const {\n    elements: { step, delay, amount  }\n    } = evt.currentTarget;\n\n  for (let i = 0; i <amount.value; i += 1){\n      const delayI=delay.value*1;\n      const stepI=step.value*1\n      const delayT=delayI + stepI*i;\n      amountMasses.push({position:i+1, delay:delayT })\n  }\n\n  // console.log(amountMasses);\n\n  for (const { position, delay } of amountMasses){\n      createPromise(position,delay)\n      .then(resolve => Notiflix.Notify.success(resolve))\n      .catch(reject=>Notiflix.Notify.failure(reject));\n  }\n\n}\n\nfunction createPromise(position,delay){\nreturn new Promise ((resolve,reject)=>{\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(()=>{\n\n          if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          } \n          \n          reject (`❌ Rejected promise ${position} in ${delay}ms`);\n          \n        },delay);\n\n});\n\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","amountMasses","elements","step","amount","currentTarget","i","value","delayI","stepI","delayT","push","delay1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.13add58f.js.map"}